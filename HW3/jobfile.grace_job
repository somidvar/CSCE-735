#!/bin/bash
##ENVIRONMENT SETTINGS; CHANGE WITH CAUTION
#SBATCH --export=NONE            #Do not propagate environment
#SBATCH --get-user-env=L         #Replicate login environment
#
##NECESSARY JOB SPECIFICATIONS
#SBATCH --job-name=JobName       #Set the job name to "JobName"
#SBATCH --time=0:25:00           #Set the wall clock limit to 0hr and 30min
#SBATCH --nodes=2               #Request 16 node
#SBATCH --ntasks-per-node=48      #Request 4 tasks/cores per node
#SBATCH --mem=8G                 #Request 8GB per node 
#SBATCH --output=output.%j       #Send stdout/err to "output.[jobID]" 
#
##OPTIONAL JOB SPECIFICATIONS
##SBATCH --mail-type=ALL              #Send email on all job events
##SBATCH --mail-user=email_address    #Send all emails to email_address 
#
##First Executable Line
#
rm -rf output.*
module load intel
icc -qopenmp -o sort_list_openmp.exe sort_list_openmp.c

echo "Part A" > results.txt
for k in 4
do
	n=2**$k
	for q in 1 2 3
	do
		p=2**$q
		echo "The the list with size of" $n "and thread num of" $p >> results.txt
		./sort_list_openmp.exe $k $q >> results.txt
	done
	echo "----------------------" >> results.txt
done
k=20
q=4
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p >> results.txt
./sort_list_openmp.exe $k $q >> results.txt

k=24
q=8
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p >> results.txt
./sort_list_openmp.exe $k $q >> results.txt


echo " " >> results.txt
echo " " >> results.txt
echo "Part B" >> results.txt

for k in 12 20 28
do
	n=2**$k
	for q in 0 1 2 4 6 8 10
	do
		p=2**$q
		echo "The the list with size of" $n "and thread num of" $p >> results.txt
		./sort_list_openmp.exe $k $q >> results.txt
	done
	echo "----------------------" >> results.txt
done

echo " " >> results.txt
echo " " >> results.txt
echo "Part C" >> results.txt

export OMP_PLACES=cores
export OMP_PROC_AFFINITY=master
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt

export OMP_PLACES=cores
export OMP_PROC_AFFINITY=close
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt


export OMP_PLACES=cores
export OMP_PROC_AFFINITY=spread
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt
###############
export OMP_PLACES=sockets
export OMP_PROC_AFFINITY=master
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt

export OMP_PLACES=sockets
export OMP_PROC_AFFINITY=close
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt


export OMP_PLACES=sockets
export OMP_PROC_AFFINITY=spread
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt
###############
export OMP_PLACES=threads
export OMP_PROC_AFFINITY=master
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt

export OMP_PLACES=threads
export OMP_PROC_AFFINITY=close
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt


export OMP_PLACES=threads
export OMP_PROC_AFFINITY=spread
k=28
q=5
n=2**$k
p=2**$q
echo "The the list with size of" $n "and thread num of" $p "using OMP_PLACES:" $OMP_PLACES "and OMP_PROC_AFFINITY:" $OMP_PROC_AFFINITY >> results.txt
./sort_list_openmp.exe $k $q >> results.txt

