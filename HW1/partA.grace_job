#!/bin/bash
##ENVIRONMENT SETTINGS; CHANGE WITH CAUTION
#SBATCH --export=NONE            #Do not propagate environment
#SBATCH --get-user-env=L         #Replicate login environment
#
##NECESSARY JOB SPECIFICATIONS
#SBATCH --job-name=JobName       #Set the job name to "JobName"
#SBATCH --time=0:60:00           #Set the wall clock limit to 0hr and 30min
#SBATCH --nodes=1               #Request 16 node
#SBATCH --ntasks-per-node=48      #Request 4 tasks/cores per node
#SBATCH --mem=8G                 #Request 8GB per node 
#SBATCH --output=output.%j       #Send stdout/err to "output.[jobID]" 
#
##OPTIONAL JOB SPECIFICATIONS
##SBATCH --mail-type=ALL              #Send email on all job events
##SBATCH --mail-user=email_address    #Send all emails to email_address 
#
##First Executable Line
#
module load intel/2020a       # load Intel software stack 
ulimit -a
icc -o compute_pi.exe compute_pi.c -lpthread
echo "Test results for part A" > resultsA1.txt
for counter in {0..13}
do
	let n=10**8
	let p=2**counter
	echo "The number of n" $n "and number of p" $p >> resultsA1.txt
	
	./compute_pi.exe $n $p >> resultsA1.txt
done


echo "Test results for part A" > resultsA2.txt
for counter in {0..13}
do
	let n=10**10
	let p=2**counter
	echo "The number of n" $n "and number of p" $p >> resultsA2.txt
	
	./compute_pi.exe $n $p >> resultsA2.txt
done

echo "Test results for part A" > resultsA4.txt
for counter in {3..9}
do
	let n=10**counter
	let p=48
	echo "The number of n" $n "and number of p" $p >> resultsA4.txt
	
	./compute_pi.exe $n $p >> resultsA4.txt
done
